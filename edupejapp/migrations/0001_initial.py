# Generated by Django 5.1.3 on 2025-02-27 22:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('apprenant', 'Apprenant'), ('parent', 'Parent'), ('mentor', 'Mentor'), ('formateur', 'Formateur')], max_length=10)),
                ('demande_validation', models.BooleanField(default=False)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos_profil/')),
                ('specialite', models.CharField(blank=True, help_text='Spécialité du formateur', max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group')),
                ('mentor', models.ForeignKey(blank=True, limit_choices_to={'role': 'mentor'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='apprenants', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, limit_choices_to={'role': 'parent'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enfants', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('duree', models.PositiveIntegerField(help_text='Durée en jours')),
                ('formateur', models.ForeignKey(limit_choices_to={'role': 'formateur'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CoursRessource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_ressource', models.CharField(choices=[('video', 'Vidéo'), ('pdf', 'PDF'), ('quiz', 'Quiz')], max_length=10)),
                ('fichier', models.FileField(blank=True, null=True, upload_to='cours_ressources/')),
                ('titre', models.CharField(blank=True, max_length=255, null=True)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ressources', to='edupejapp.cours')),
            ],
        ),
        migrations.CreateModel(
            name='Entretien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('note', models.TextField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('prévu', 'Prévu'), ('terminé', 'Terminé')], default='prévu', max_length=20)),
                ('apprenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entretiens_apprenant', to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(limit_choices_to={'role': 'mentor'}, on_delete=django.db.models.deletion.CASCADE, related_name='entretiens_mentor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('apprenant', models.ForeignKey(limit_choices_to={'role': 'apprenant'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edupejapp.cours')),
            ],
        ),
        migrations.CreateModel(
            name='Progression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('termine', models.BooleanField(default=False)),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('apprenant', models.ForeignKey(limit_choices_to={'role': 'apprenant'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edupejapp.cours')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz', to='edupejapp.cours')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.TextField()),
                ('choix1', models.CharField(max_length=255)),
                ('choix2', models.CharField(max_length=255)),
                ('choix3', models.CharField(max_length=255)),
                ('choix4', models.CharField(max_length=255)),
                ('bonne_reponse', models.CharField(max_length=255)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='edupejapp.quiz')),
            ],
        ),
    ]
